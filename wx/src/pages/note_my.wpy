<style lang="less">
  .ui-my__box{
    width: 100%;
    height: 410rpx;
    background: #32b36e;
    .ui-my__avatar{
      width: 200rpx;
      height: 200rpx;
      margin: 0 auto;
      padding: 50rpx 0;
      border-radius: 50%;
      .ui-my__image{
        width: 100%;
        height: 100%;
        border-radius: 50%;
        overflow: hidden;
      }
    }
    .ui-my__name{
      width: 100%;
      height: 100rpx;
      font-size: 50rpx;
      text-align: center;
      color: #fff;
    }
  }
  .ui-my__list{
    width: 100%;
    height: auto;
    .ui-my__item{
      width: 100%;
      height: 100rpx;
      line-height: 100rpx;
      font-size: 30rpx;
      text-indent: 20rpx;
      border-bottom: 1rpx solid #ccc;
      image{
        width: 50rpx;
        height: 50rpx;
        display: inline-block;
        vertical-align: middle;
        margin-right: 10rpx;
      }
    }
  }
</style>
<template>
  <view class="ui-my__box">
    <view class="ui-my__avatar">
      <view class="ui-my__image"><open-data type="userAvatarUrl"></open-data></view>
    </view>
    <view class="ui-my__name"><open-data type="userNickName"></open-data></view>
  </view>
  <view class="ui-my__list">
    <view class="ui-my__item" @tap="onTapCollect">
      <image src="../assets/images/hascollect.png"></image>
      <text>我的收藏</text>
    </view>
    <view class="ui-my__item" @tap="onTapHelp">
      <image src="../assets/images/help.png"></image>
      <text>使用指南</text>
    </view>
  </view>
  <tabBar :tabBar="tabBar"></tabBar>
</template>

<script>
  import wepy from 'wepy'
  import notelist from '@/components/notelist'
  import tabBar from '@/components/tabBar'
  import utils from '../common/util'
  import _g from '../common/util'
  import Refresh from 'wepy-scroll-view-refresh'


  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '我的'
    }
    components = {
      notelist: notelist,
      tabBar: tabBar,
      refresh: Refresh
    }

    data = {
      avatar: '../assets/images/avatar.png',


      height: '',
      scrollTop: 0,
      page: 1,
      pageSize: 10,
      isBottom: false,
      list: [],
      notebook_id: '',
      tabBar: {
        "selectedColor": "#32b36e",
        "list": [
          {
            "pagePath": "../pages/note_list",
            "text": "所有",
            "iconPath": "/assets/images/note.png",
            "selectedIconPath": "/assets/images/note_select.png",
            "selectedColor": "#32b36e",
            "pageTum": "redirect",
            "active": false
          }, 
          {
            "pagePath": "../pages/note_add",
            "text": "新增",
            "iconPath": "/assets/images/add.png",
            "selectedIconPath": "/assets/images/add_select.png",
            "selectedColor": "#32b36e",
            "pageTum": "navigate",
            "active": false
          }, 
          {
            "pagePath": "../pages/notebook",
            "text": "笔记本",
            "iconPath": "/assets/images/doc.png",
            "selectedIconPath": "/assets/images/doc_select.png",
            "selectedColor": "#32b36e",
            "pageTum": "redirect",
            "active": false
          },
          {
            "pagePath": "../pages/note_my",
            "text": "我的",
            "iconPath": "/assets/images/my.png",
            "selectedIconPath": "/assets/images/my_select.png",
            "selectedColor": "#32b36e",
            "pageTum": "redirect",
            "active": true
          }
        ]
      }
    }

    events = {
      'refresh': (data) => {
        var self = this;
        console.log('data: ', data)
        setTimeout(() => {
          self.getList(1);
          self.$invoke('refresh', 'reset');
        }, 1500)
      }
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      onShareAppMessage: function (res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
          console.log(res.target)
        }
        return {
          title: '个人笔记',
          path: '/pages/note_list',
          imageUrl: '/assets/images/sharenote.png'
        }
      },
      lower: function(e) {
        console.log('底部')
        console.log(e)
        this.page++;
        if (!this.isBottom) {
          this.getList(this.page);
        }
      },
      edit (id) {
        wx.navigateTo({
          url: 'note_add?id=' + id
        })
      },
      deleteNote (id) {
        var self = this;
        _g.ajax('post', '/note/delete_note',{noteId: id},function(res){
          if (res.data.success) {
            _g.toast(res.data.message);
            self.getList(self.page);
          }
        },function(err){
          console.log('err');
          console.log(err);
        });
      },
      addNote () {
        wx.navigateTo({
          url: 'note_add'
        })
      },
      onTapCollect () {
        wx.navigateTo({
          url: 'note_list?myCollect=true'
        })
      },
      onTapHelp () {
        wx.navigateTo({
          url: 'note_help'
        })
      }
    }

    getList (page) {
      var self = this;
      _g.ajax('get', '/note/get_all_note',{notebook_id: self.notebook_id, page: page, pageSize: self.pageSize} ,function(res){
        if (res.data.object && res.data.object.length ===0) {
          self.isBottom = true;
        }

        wx.showLoading({ //期间为了显示效果可以添加一个过度的弹出框提示“加载中”  
          title: '加载中',
          icon: 'loading',
        });
        if (self.page == 1) {
          self.list = res.data.object;
        } else {
          self.list = self.list.concat(res.data.object);
        }
        for( var v of self.list) {
          v.createtime = _g.getTimes(v.createtime);
        }
        setTimeout(() => {
          wx.hideLoading()
        }, 1000)
        self.$apply();
      },function(err){
        console.log('err');
        console.log(err);
      });
    }

    onShow () {
      var self = this;
    }

    onLoad(option) {
      console.log('&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&');
      console.log(option)
      this.notebook_id = option && option.id ? option.id : '';
      this.getList(1);
      wx.getSystemInfo({
        success: (res) => {
          this.height = res.windowHeight - 61;
        }
      })
      console.log('用户信息：')
      console.log(this.$parent.globalData);
    }
  }
</script>
